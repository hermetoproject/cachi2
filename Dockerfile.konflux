FROM registry.access.redhat.com/ubi9/ubi@sha256:a1804302f6f53e04cc1c6b20bc2204d5c9ae6e5a664174b38fbeeb30f7983d4e as ubi
FROM registry.access.redhat.com/ubi9/nodejs-22@sha256:ab6c06c0109862fc7da56f9acdc6df35d06da08df0c301f4f0b931d07ac6c494 as node

###########################
# PREPARE GENERIC ARTIFACTS
###########################
FROM ubi as artifacts

RUN mkdir /artifacts && \
    cd /artifacts && \
    mkdir go1.20 go1.21 nodejs && \
    # Assume that the Hermeto prefetched content will be mounted to /cachi2/output
    tar -xzf /cachi2/output/deps/generic/go1.20.linux-amd64.tar.gz -C ./go1.20 && \
    tar -xzf /cachi2/output/deps/generic/go1.21.0.linux-amd64.tar.gz -C ./go1.21

########################
# PREPARE OUR BASE IMAGE
########################
FROM ubi as base
RUN dnf -y install \
    --setopt install_weak_deps=0 \
    --nodocs \
    git-core \
    jq \
    python3 \
    rubygem-bundler \
    rubygem-json \
    subscription-manager && \
    dnf clean all

###############
# BUILD/INSTALL
###############
FROM base as builder
WORKDIR /src
RUN dnf -y install \
    --setopt install_weak_deps=0 \
    --nodocs \
    gcc \
    # not a build dependency, but we copy the binary to the final image
    cargo \
    python3-devel \
    python3-pip \
    python3-setuptools \
    && dnf clean all

# Install dependencies in a separate layer to maximize layer caching
COPY requirements.txt .
RUN python3 -m venv /venv && \
    /venv/bin/pip install --upgrade pip && \
    /venv/bin/pip install -r requirements.txt --no-deps --no-cache-dir --require-hashes

COPY . .
RUN /venv/bin/pip install --no-cache-dir .

##########################
# ASSEMBLE THE FINAL IMAGE
##########################
FROM base
LABEL maintainer="Red Hat"

# copy Go SDKs and Node.js installation from official images
COPY --from=artifacts /artifacts/go1.20/go/bin/go /usr/local/go/go1.20
COPY --from=artifacts /artifacts/go1.21/go/bin/go /usr/local/go/go1.21
COPY --from=artifacts /artifacts/nodejs/lib/node_modules/corepack/dist/corepack.js /usr/local/lib/corepack
COPY --from=node /usr/bin/node /usr/bin/node
COPY --from=builder /usr/bin/cargo /usr/bin/cargo
COPY --from=builder /venv /venv

# link corepack, yarn, and go to standard PATH location
RUN ln -s /usr/local/lib/corepack/dist/corepack.js /usr/local/bin/corepack && \
    ln -s /usr/local/lib/corepack/dist/yarn.js /usr/local/bin/yarn && \
    ln -s /usr/local/go/go1.21/bin/go /usr/local/bin/go && \
    ln -s /venv/bin/createrepo_c /usr/local/bin/createrepo_c && \
    ln -s /venv/bin/cachi2 /usr/local/bin/cachi2 && \
    ln -s /venv/bin/hermeto /usr/local/bin/hermeto

ENTRYPOINT ["/usr/local/bin/hermeto"]
